-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 7384 characters

local ScriptFunctions = {
function(script,require)

end,
function(script,require)

end,
function(script,require)

end,
function(script,require)

end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end

function RunScripts()
	for script,index in pairs(Scripts) do
		coroutine.wrap(ScriptFunctions[index])(script,require)
	end
end


local function DecodeUnion(Values,Flags,Parse,data)
	local m = Instance.new("Folder")
	m.Name = "UnionCache ["..tostring(math.random(1,9999)).."]"
	m.Archivable = false
	m.Parent = game:GetService("ServerStorage")
	local Union,Subtract = {},{}
	if not data then
		data = Parse('B')
	end
	local ByteLength = (data % 4) + 1
	local Length = Parse('I'..ByteLength)
	local ValueFMT = ('I'..Flags[1])
	for i = 1,Length do
		local data = Parse('B')
		local part
		local isNegate = bit32.band(data,0b10000000) > 0
		local isUnion =  bit32.band(data,0b01000000) > 0
		if isUnion then
			part = DecodeUnion(Values,Flags,Parse,data)
		else
			local isMesh = data % 2 == 1
			local ClassName = Values[Parse(ValueFMT)]
			part = Instance.new(ClassName)
			part.Size = Values[Parse(ValueFMT)]
			part.Position = Values[Parse(ValueFMT)]
			part.Orientation = Values[Parse(ValueFMT)]
			if isMesh then
				local mesh = Instance.new("SpecialMesh")
				mesh.MeshType = Values[Parse(ValueFMT)]
				mesh.Scale = Values[Parse(ValueFMT)]
				mesh.Offset = Values[Parse(ValueFMT)]
				mesh.Parent = part
			end
		end
		part.Parent = m
		table.insert(isNegate and Subtract or Union,part)
	end
	local first = table.remove(Union,1)
	if #Union>0 then
		first = first:UnionAsync(Union)
	end
	if #Subtract>0 then
		first = first:SubtractAsync(Subtract)
	end
	m:Destroy()
	return first
end

local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEAVASEFTW9kZWwhBE5hbWUhBk1vbG9jaCEKV29ybGRQaXZvdAT9AP4A/wAhA0V5ZQQAAQEBAgEhBFBhcnQhBVdoaXRlIQhBbmNob3JlZCIhDUJvdHRvbVN1cmZhY2UDAAAAAAAAAAAhCkJyaWNrQ29sb3IH6QMhBkNGcmFtZQQaAAMBBAEhCkNhbkNvbGxpZGUCIQhD'
..'YW5Ub3VjaCEFQ29sb3IG////IQtPcmllbnRhdGlvbgoAAAAAAAAWQwAAAAAhCFBvc2l0aW9uCojVzMIEztFAAHCrQCELUmVmbGVjdGFuY2UDAAAAoJmZ2T8hCFJvdGF0aW9uCgAANMMAAPBBAAA0wyEEU2l6ZQpmNzBAZjcwQGY3MEAhClRvcFN1cmZhY2UhBVNoYXBl'
..'IQRHcmV5BxsABCcAAwEEAQZ0dXIKRCnOwgTO0UABK59AAwAAAEAzM9M/CobpzT+G6c0/hunNPyEEU2tpbgdRAQQwAAMBBAEG/pqaIQhNYXRlcmlhbAMAAAAAAACUQAqAOczCBM7RQAGCyEADAAAAoJmZ4T8Kh5AGQIeQBkCHkAZAB0sBBDcAAQECAQb/WVkKZmY2Qtdj'
..'BkPhehDCCshPzMII0NFAAI6uQAoK1/hCAADwQQAANEMKlTw/QJU8P0CVPD9ABDsAAwEEAQoI28rCBM7RQAGQokAhBUJsYWNrB+sDBEEAAwEEAQYAAAADAAAAAACAmEAKSErPwgTO0UABuZRACqLSFz+i0hc/otIXPwQFAQYBBwEERgAIAQQBCgAAAAAAACDDAAAAAAoo'
..'BM3CBM7RQIDfRkEKAAA0wwAAoMEAADTDBEkACAEEAQrgdM7CBM7RQIARS0EESwAIAQQBCmA7y8IEztFAgH1MQQROAAYBBwEKSOE/wo/C9cEULhzDCpyHzMII0NFAgKxEQQqF61DCAACgwQAANMMEUQAIAQQBCiQrzMIEztFAgOY3QQRTAAgBBAEKXK7PwgTO0UAAo05B'
..'BAkBCgELAQRXAAwBBAEKAAAAAAAANMMAAAAACvDwzcIpYhxBAEsQQQoAADTDAAAAAAAANMMKl9lwQJfZcECX2XBABFsADAEEAQovCdDCKWIcQYBKEEEKCLgMQAi4DEAIuAxABF4ADAEEAQpw+svCKWIcQQAuHkEKvOs3QLzrN0C86zdABGIACgELAQofhd/BAAA0wwAA'
..'AAAKKDDNwvthHEGASA9BClwPGMMAAAAAAAA0wwqRsIJAkbCCQJGwgkAEZgAMAQQBCnD6y8IpYhxBgDoAQQRoAAwBBAEKd9HRwiliHEEATBBBClaCTz9Wgk8/VoJPPwQNAQ4BDwEEbAAMAQQBCrA9zsIEztFAAP8PQQRuAAwBBAEKN8bPwgTO0UAAABBBBHAADAEEAQoo'
..'zszCBM7RQIAoGkEEcwAOAQ8BCuxR1kEAADTDAAAAAAqwsM3CAs7RQIBDD0EKwzUZQwAAAAAAADRDBHYADAEEAQpAzszCBM7RQABABEEEeAAMAQQBCvcT0cIEztFAgAAQQSEOVW5pb25PcGVyYXRpb24hBEhlYWQEgAD+AAQBIRhDdXN0b21QaHlzaWNhbFByb3BlcnRp'
..'ZXMQmpkZPwAAgD7NzEw+AACAPwAAgD8DAAAAAAAAgEAKAAAAAAAAtEIAAAAACgAAvsIRgwFBAAAQQQMAAAAAAADwPwoAAAAASOGzQgAAAAAKKIOBQRSDgUHGhIFBIQxVc2VQYXJ0Q29sb3IK364sPyKDgUAmg4FACkxRuMIA4X5BPlVMQQoAAAAApPD9QgAAAAAK5K4s'
..'PyKDgUAng4FACtnZvMIA4X5B4vZaQQoAAAAAXA+mwgAAAAAK364sPyKDgUAlg4FACsd2usIA4X5B8gdWQQoAAAAAXA+IwgAAAAAK3K4sPyKDgUApg4FACmtOtcIA4X5BrIYtQQoAAAAAcT24wQAAAAAK3q4sPyKDgUAog4FACtiOtsIA4X5Bv4E+QQoAAAAAuB4YwgAA'
..'AAAK2q4sPyKDgUApg4FACkeltMIA4X5BHIYaQQoAAAAA4XoAwQAAAAAK4a4sPyKDgUAjg4FACvtQv8IA4X5BCMpaQQoAAAAAXA/EwgAAAAAK3a4sPyKDgUArg4FACoeftMIA4X5Bd80GQQoAAAAAPQrfQAAAAAAK3K4sPyKDgUAog4FACoY9tcIA4X5B1m3nQAoAAAAA'
..'j8KvQQAAAAAK3q4sPyKDgUAng4FACuVztsIA4X5BLhPFQAoAAAAASOETQgAAAAAK364sPyKDgUAkg4FACsWwwcIA4X5BgIBVQQoAAAAAXA/iwgAAAAAK4q4sPyKDgUAng4FACkwuuMIA4X5B3+6oQAoAAAAASOFPQgAAAAAKjk26wgDhfkEO5JRACgAAAACk8IVCAAAA'
..'AAqIb8XCAOF+QXzgwkAKAAAAAFL4DUMAAAAACqutvMIA4X5BKFOKQAoAAAAApPCjQgAAAAAKOrDGwgDhfkHi2eRACgAAAABS+BxDAAAAAApZrcPCAOF+Qbw8p0AKAAAAALgeVMIAAAAACp7Qw8IA4X5BzH1LQQoAAAAArgcAwwAAAAAKzCS/wgDhfkF0+YlACgAAAACk'
..'8MFCAAAAAAqZh8HCAOF+QRTUk0AKAAAAAKTw30IAAAAACl5Zx8IA4X5BgG0FQQoAAAAAUvgrQwAAAAAKwIrFwgDhfkEFaj1BCgAAAACuBw/DAAAAAArMXsfCAOF+QRAlGUEKAAAAAK4HLcMAAAAACmTBxsIA4X5BUT4sQQoAAAAArgcewwAAAAAKocYlPiKDgUBBOM9A'
..'CiB8vsL85n5B5SUgQQoAAAAAH4XVwgAAAAAKl8YlPiKDgUBGOM9ACpL7v8L85n5BMmMQQQoAAAAAj8IywwAAAAAKm8YlPiKDgUBEOM9ACpUmvML85n5BOaAZQQoAAAAAPQoLwgAAAAAKnMYlPiKDgUBGOM9ACi80vML85n5Bf9QFQQoAAAAAw/UUQgAAAAAKnsYlPiKD'
..'gUA9OM9ACouSvsIE235BYyEAQQoAAAAA4XraQgAAAAAKKIOBQSiDgUEog4FBCgAAvsIhgwFBAAAQQQMAAAAAAAAIQAoAAIA/AACAPwAAgD8KAAAAAAAAAAAAAAAAIQZTY3JpcHQhCERpc2FibGVkIQtMb2NhbFNjcmlwdCEOV2VsZENvbnN0cmFpbnQhBFdlbGQhBVBh'
..'cnQwIQVQYXJ0MSECQzAEEAERARIBIQJDMQQTAf4AFAEhCE1lc2hQYXJ0IQRIb3JuBOUAFQEEARAK1yM8AACAPs3MTD4AAIA/AACAPwoAAAAAAAC0wgAAAAAKF23RwkI4T0GAAhBBCgAAAABI4bPCAAAAAArQzidBALPxQABIBUEhBk1lc2hJZCEXcmJ4YXNzZXRpZDov'
..'LzgxNzkxOTU5OTUhCE1lc2hTaXplIQVUb3JzbwfsAwTwAP4ABAEG/wAAEJqZmT6amZk+AAAAPwAAgD8AAIA/Ctj/vcLmrQhBgAAQQQozj3E/M49xPzOPcT8hDFRyYW5zcGFyZW5jeQodWpBAZDsvQMdLBUEKjZfeQHnpmkDHSwVBIQxCb2R5UG9zaXRpb24hBEJQb3Mh'
..'AUQhCE1heEZvcmNlIQFQBPsA/gAEAQoAAL7CrgsMQQAAEEEKLvVtQS71bUEu9W1BCgAAvsIqgwFBAAAQQQoAAAAAAAAAAAAAgL8KAAAAAPr/fz8AAAAACpiFzMJamdBAAHauQAqqtV2/vi7TvqmnkL4K+i8tuCCvED9pMVO/CjW2Xb8AAAAAsvf/vgoAAAAA9v9/PwAA'
..'AAAKKJrMwmL000CAkUVBCmuPcL83b4q+aoBWvgr6/543xsscvw5dSj8KtY5wvwAAAACAIq8+CtDdzcJX1RxBAHEPQQr3/3+/+z+ANwBQtDgK+J9hOOkmYj9F7e8+Cvb/f78AAAAAAID+NwrIL87C8irRQABeD0EK9/9/v/r/sjYAYBQ4Cvr/OrdIhGQ/VsrmvgoAAAAA'
..'EYMBwQAAAAAKAACAPwAAAAAAAAAACgAAAAAAAAAA/P9/PwoAPB1BAgAgQbZZ5sIK/v9/PwAAAAAAAAAACgAAAAAAAAAAAACAPy0BAAACAAIAAwAEAAUAAQABAgACAAYABAAHAAgAAg8AAgAJAAoACwAMAA0ADgAPABAAEQASABMAFAATABUAFgAXABgAGQAaABsAHAAd'
..'AB4AHwAgACEADQAiAA0ACAACDwACACMACgALAAwADQAOACQAEAAlABIAEwAUABMAFQAmABcAGAAZACcAGwAoAB0AHgAfACkAIQANACIADQAIAAIQAAIAKgAKAAsADAANAA4AKwAQACwAEgATABQAEwAVAC0ALgAvABcAGAAZADAAGwAxAB0AHgAfADIAIQANACIADQAI'
..'AAIQAAIAKgAKAAsADAANAA4AMwAQADQAEgATABQAEwAVADUALgAvABcANgAZADcAGwAxAB0AOAAfADkAIQANACIADQAIAAIQAAIAKgAKAAsADAANAA4AKwAQADoAEgATABQAEwAVAC0ALgAvABcAGAAZADsAGwAxAB0AHgAfADIAIQANACIADQAIAAIPAAIAPAAKAAsA'
..'DAANAA4APQAQAD4AEgATABQAEwAVAD8ALgBAABcAGAAZAEEAHQAeAB8AQgAhAA0AIgANAAEAAQIAAgAGAAQAQwAIAAkPAAIACQAKAAsADAANAA4ADwAQAEQAEgATABQAEwAVABYAFwBFABkARgAbABwAHQBHAB8AIAAhAA0AIgANAAgACQ8AAgAjAAoACwAMAA0ADgAk'
..'ABAASAASABMAFAATABUAJgAXAEUAGQBJABsAKAAdAEcAHwApACEADQAiAA0ACAAJEAACACoACgALAAwADQAOACsAEABKABIAEwAUABMAFQAtAC4ALwAXAEUAGQBLABsAMQAdAEcAHwAyACEADQAiAA0ACAAJEAACACoACgALAAwADQAOADMAEABMABIAEwAUABMAFQA1'
..'AC4ALwAXAE0AGQBOABsAMQAdAE8AHwA5ACEADQAiAA0ACAAJEAACACoACgALAAwADQAOACsAEABQABIAEwAUABMAFQAtAC4ALwAXAEUAGQBRABsAMQAdAEcAHwAyACEADQAiAA0ACAAJDwACADwACgALAAwADQAOAD0AEABSABIAEwAUABMAFQA/AC4AQAAXAEUAGQBT'
..'AB0ARwAfAEIAIQANACIADQABAAECAAIABgAEAFQACAAQDwACAAkACgALAAwADQAOAA8AEABVABIAEwAUABMAFQAWABcAVgAZAFcAGwAcAB0AWAAfAFkAIQANACIADQAIABAPAAIAIwAKAAsADAANAA4AJAAQAFoAEgATABQAEwAVACYAFwBWABkAWwAbACgAHQBYAB8A'
..'XAAhAA0AIgANAAgAEBAAAgAqAAoACwAMAA0ADgArABAAXQASABMAFAATABUALQAuAC8AFwBWABkAXgAbADEAHQBYAB8AXwAhAA0AIgANAAgAEBAAAgAqAAoACwAMAA0ADgAzABAAYAASABMAFAATABUANQAuAC8AFwBhABkAYgAbADEAHQBjAB8AZAAhAA0AIgANAAgA'
..'EBAAAgAqAAoACwAMAA0ADgArABAAZQASABMAFAATABUALQAuAC8AFwBWABkAZgAbADEAHQBYAB8AXwAhAA0AIgANAAgAEA8AAgA8AAoACwAMAA0ADgA9ABAAZwASABMAFAATABUAPwAuAEAAFwBWABkAaAAdAFgAHwBpACEADQAiAA0AAQABAgACAAYABABqAAgAFw8A'
..'AgAJAAoACwAMAA0ADgAPABAAawASABMAFAATABUAFgAXAFYAGQBsABsAHAAdAFgAHwAgACEADQAiAA0ACAAXDwACACMACgALAAwADQAOACQAEABtABIAEwAUABMAFQAmABcAVgAZAG4AGwAoAB0AWAAfACkAIQANACIADQAIABcQAAIAKgAKAAsADAANAA4AKwAQAG8A'
..'EgATABQAEwAVAC0ALgAvABcAVgAZAHAAGwAxAB0AWAAfADIAIQANACIADQAIABcQAAIAKgAKAAsADAANAA4AMwAQAHEAEgATABQAEwAVADUALgAvABcAcgAZAHMAGwAxAB0AdAAfADkAIQANACIADQAIABcQAAIAKgAKAAsADAANAA4AKwAQAHUAEgATABQAEwAVAC0A'
..'LgAvABcAVgAZAHYAGwAxAB0AWAAfADIAIQANACIADQAIABcPAAIAPAAKAAsADAANAA4APQAQAHcAEgATABQAEwAVAD8ALgBAABcAVgAZAHgAHQBYAB8AQgAhAA0AIgANAHkAQALAAkAYAAgAhQCGAIcAAAgAiACJAIoAAAgAiwCMAI0AAAgAjgCPAJAAAAgAkQCSAJMA'
..'AAgAlACVAJYAAAgAlwCYAJkAAAgAmgCbAJwAAAgAnQCeAJ8AAAgAoAChAKIAAAgAowCkAKUAAAgApgCnAKgAAAgAowCpAKoAAAgAkQCrAKwAAAgAlwCtAK4AAAgAjgCvALAAAAgAhQCxALIAAAgApgCzALQAAAgAiAC1ALYAAAgAiwC3ALgAAAgAlAC5ALoAAAgAoAC7'
..'ALwAAAgAmgC9AL4AAAgAnQC/AMAAQAUACADBAMIAwwAACADEAMUAxgAACADHAMgAyQAACADKAMsAzAAACADNAM4AzwABCADQANEAfwDSANMA1AABCwACAHoACgALABAAewB8AH0ALgB+ABcAfwAZAIAAGwCBAB0AggAfAIMAhAALANUAHgEA1gALANcAHwEAAgDVANcA'
..'HwEAAgDVANUAHwAA2AAeAQACANkA2AAeAQACANkA2QAeAgDcAN0A3gDfAOAAAQ8AAgDhAAoACwAOAA8AEADiABIAEwAVABYAfADjAC4AfgAXAOQAGQDlABsAgQAdAOYAHwDnAOgA6QDqAOcACAABDQACAOsACgALAAwADQAOAOwAEADtABUA7gB8AO8AFwB/ABkA8AAd'
..'AIIAHwDxACEADQDyAIEA4AABDwACAOEACgALAA4ADwAQAOIAEgATABUAFgB8AOMALgB+ABcA5AAZAOUAGwCBAB0A5gAfAPMA6ADpAOoA5wDYACgBAAIA2QDgAAEPAAIA4QAKAAsADgAPABAA4gASABMAFQAWAHwA4wAuAH4AFwDkABkA5QAbAIEAHQDmAB8A9ADoAOkA'
..'6gDnAPUAKgUAAgD2APcADQD4ANQA+QANABkA1ADYACoBAAIA2QAIAAEOAAIAKgAKAAsADAANAA4AMwAQAPoAFQA1AC4ALwAXAH8AGQD7ABsAgQAdAIIAHwD8ACEADQAiAA0ACSPaAB4j2wAtJNoAHiTbACYl2gAeKdoAKCnbACos2gAqLNsAJg==')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
