-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 9704 characters

local ScriptFunctions = {
function(script,require)
print("Hello world!")

end,
function(script,require)
--Kill OnTouch 

function onTouch(part) 
	local humanoid = part.Parent:FindFirstChild("Humanoid") 
	if (humanoid ~= nil) then	-- if a humanoid exists, then
		humanoid.Health = humanoid.Health -10
		wait(1)-- damage the humanoid
   end 
end

script.Parent.Touched:connect(onTouch)



end,
function(script,require)
local RunService = game:GetService("RunService")
local Players = game:GetService("Players")

local animation1 = script.Parent.Parent.Animations:WaitForChild('WalkAnim')
local humanoid = script.Parent.Parent:WaitForChild('Humanoid')
local walkani = humanoid:LoadAnimation(animation1)
local animation2 = script.Parent.Parent.Animations:WaitForChild('Idle1')
local Idleani = humanoid:LoadAnimation(animation2)
local animationalreadyplaying = false
local canplayanimation = false


local humanoid = script.Parent
local root = humanoid.Parent.PrimaryPart

local targetDistance = 20
local stopDistance = 0

function findNearestPlayer()
	local playerList = Players:GetPlayers()
	
	local nearestPlayer = nil
	local distance = nil
	local direction = nil
	
	for _, player in pairs(playerList) do
		local character = player.Character
		if character then
			local distanceVector = (player.Character.HumanoidRootPart.Position - root.Position)
			if not nearestPlayer then
				nearestPlayer = player
				distance = distanceVector.Magnitude
				direction = distanceVector.Unit
			elseif distanceVector.Magnitude < distance then
				nearestPlayer = player
				distance = distanceVector.Magnitude
				direction = distanceVector.Unit
			end	
		end
	end
	
	return nearestPlayer, distance, direction
end

function Stopanimation()
	local nearestPlayer, distance, direction = findNearestPlayer()
	if nearestPlayer then
		if distance > targetDistance then
			walkani:Stop()
			animationalreadyplaying = false
			print("stopedanimtion")
			Idleani:Play()
			canplayanimation = false
		else
			Idleani:Stop()
			canplayanimation = true
		end
	
	end
  
end
	




RunService.Heartbeat:Connect(function()
	local nearestPlayer, distance, direction = findNearestPlayer()
	if nearestPlayer then
		if distance <= targetDistance and distance >= stopDistance then
			
			if animationalreadyplaying == false and canplayanimation == true then
				walkani:Play()
				animationalreadyplaying = true
			end
			humanoid:Move(direction)
			
		else
			if animationalreadyplaying == false and canplayanimation == true then
				walkani:Play()
				animationalreadyplaying = true
			end
			humanoid:Move(Vector3.new())
		end
	end
end)



while true do
	Stopanimation()
	wait(0.5)
end


end,
function(script,require)
print("Hello world!")

end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end

function RunScripts()
	for script,index in pairs(Scripts) do
		coroutine.wrap(ScriptFunctions[index])(script,require)
	end
end


local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AEBpASEFTW9kZWwhBE5hbWUhEUZsb3BwYSBLaWxsZXIgTlBDIQtQcmltYXJ5UGFydCEKV29ybGRQaXZvdAQQAVEBUgEhCE1lc2hQYXJ0IQhMZWZ0Rm9vdCEGQ0ZyYW1lBBAAUQFSASEKQ2FuQ29sbGlkZQIhC09yaWVudGF0aW9uCgAAAAAAALRCAAAAACEIUG9zaXRp'
..'b24KqySWwSRATD4K/1vBIQhSb3RhdGlvbiEEU2l6ZQqdA4g/iF22Prn0hz8hDFRyYW5zcGFyZW5jeQMAAAAAAADwPyEGTWVzaElkIShodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQ/aWQ9NDY3OTgyNjczIQhNZXNoU2l6ZQqwFIA/gLqrPqoGgD8hCkF0dGFjaG1l'
..'bnQhFkxlZnRBbmtsZVJpZ0F0dGFjaG1lbnQEHQBTAVIBCsXhHLxmHg09bbpFOSEHTW90b3I2RCEJTGVmdEFua2xlIQJDMARKAFMBUgEhAkMxIQVQYXJ0MCEFUGFydDEhCExlZnRIYW5kBCcAUQFSAQoyJJbBvKIUQMHySsEKQdWHP3RItj7/94c/IShodHRwOi8vd3d3'
..'LnJvYmxveC5jb20vYXNzZXQ/aWQ9NDY3OTgyNjU1ChDSfz+npqs+vwmAPyEWTGVmdFdyaXN0UmlnQXR0YWNobWVudAQtAFMBUgEK9grXuQDaez19T4a8IRJMZWZ0R3JpcEF0dGFjaG1lbnQEMQBTAVQBCgAAtMIAAACAAAAAAAq1ADy8/Gg3vkpPhrwhCUxlZnRXcmlz'
..'dAQ+AFMBUgEEVQFTAVIBIQxMZWZ0TG93ZXJBcm0ENwBRAVIBCkAwlsGW8EZAUvhKwQpF94c/aAqsP1/2hz8hKGh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldD9pZD00Njc5ODI2NTgKEAmAP4sBoj84CIA/IRZMZWZ0RWxib3dSaWdBdHRhY2htZW50BD0AUwFSAQrx'
..'2ee6HrMFPmgtLLwK8dnnusd5Ob9oLSy8IQlMZWZ0RWxib3cEVgBTAVIBIQxMZWZ0TG93ZXJMZWcEQwBRAVIBCvIklsG873w/duhbwQo+94c/JnzKPxX5hz8hKGh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldD9pZD00Njc5ODI2NzUKCgmAP7Osvj/FCoA/IRVMZWZ0'
..'S25lZVJpZ0F0dGFjaG1lbnQESQBTAVIBCo0khbv6mp0+Fx2qOQqNJIW7zQ1BvxcdqjkhCExlZnRLbmVlBFYBUwFSASEMTGVmdFVwcGVyQXJtBE8AUQFSAQo+MZbBGS5hQFH4SsEKQ/eHP4GxvT9f9oc/IShodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQ/aWQ9NDY3'
..'OTgyNjYxCg4JgD8OobI/OAiAPyEZTGVmdFNob3VsZGVyUmlnQXR0YWNobWVudARVAFMBUgEKZNKGPu5U+D5QPiS8CrTE57qMEo++UD4kvCEWTGVmdFNob3VsZGVyQXR0YWNobWVudARZAFMBUgEK9EBSvJ71QD9QPiS8IQxMZWZ0U2hvdWxkZXIE/gBTAVIBIQxMZWZ0'
..'VXBwZXJMZWcEXgBRAVIBCo8llsEc0sk/duhbwQo894c/ZtLQP/oNiD8hKGh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldD9pZD00Njc5ODI2NzgKCAmAP1SkxD9yHoA/IRRMZWZ0SGlwUmlnQXR0YWNobWVudARkAFMBUgEKjSSFu6PhAz/1LD86BGYAUwFSAQqNJIW7'
..'/M2PvmlWIzohB0xlZnRIaXAEVwFTAVIBIQpMb3dlclRvcnNvBGsAUQFSAQq8JpbBdmYWQFVqZMEKtfAHQHiB2T4K9Yc/IShodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQ/aWQ9NDY3OTgyNjkyCuICAEC70cw+9waAPyERUm9vdFJpZ0F0dGFjaG1lbnQEcQBTAVIB'
..'CjD9mzk1qxA+YVF4vCESV2Fpc3RSaWdBdHRhY2htZW50BHQAUwFSAQow/Zs5sAYSP2FReLwEdgBTAVIBCjQoCb/5J4S+L+mqOiEVUmlnaHRIaXBSaWdBdHRhY2htZW50BHkAUwFSAQo0Twk/0EOEvqMSjzohFFdhaXN0RnJvbnRBdHRhY2htZW50BHwAUwFSAQow/Zs5'
..'vFmRvVJFCL8hFVdhaXN0Q2VudGVyQXR0YWNobWVudAR/AFMBUgEKMP2bObxZkb1hUXi8IRNXYWlzdEJhY2tBdHRhY2htZW50BIIAUwFSAQow/Zs5vFmRva9xBT8hBFJvb3QhBFBhcnQhBEhlYWQhDUJvdHRvbVN1cmZhY2UDAAAAAAAAAAAEiwBRAVIBIQZMb2NrZWQi'
..'Ci9OlsF10JtAq2tkwQql7Yc/pe2HP6Xthz8hClRvcFN1cmZhY2UhC1NwZWNpYWxNZXNoIQVTY2FsZSEoaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0P2lkPTQxOTc3NjM1OCEITWVzaFR5cGUDAAAAAAAAFEAhFEZhY2VDZW50ZXJBdHRhY2htZW50BJYAWAFZAQpM'
..'PY+nrKucqcizJagKpe0HMxYd1jmpjoY7IRFOZWNrUmlnQXR0YWNobWVudASZAFMBUgEKRWPyty3EGb+sjoY7IRNGYWNlRnJvbnRBdHRhY2htZW50BJwAWAFZAQo7FvowmSFhOGZQIb8hDkhhaXJBdHRhY2htZW50BJ8AWAFZAQo7FvowVuAiP6+OhjshDUhhdEF0dGFj'
..'aG1lbnQhDk5lY2tBdHRhY2htZW50BKMAWAFZAQpFY/K3SQEdv6yOhjshBURlY2FsIQRmYWNlIQdUZXh0dXJlIRxyYnhhc3NldDovL3RleHR1cmVzL2ZhY2UucG5nIQROZWNrBFoBUwFSAQRbAVMBUgEhBlNjcmlwdCEJUmlnaHRGb290BK4AUQFSAQqrJJbBIEBMPhDY'
..'bMEKnQOIP4xdtj659Ic/IShodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQ/aWQ9NDY3OTgyNjgxCrAUgD+Euqs+qgaAPyEXUmlnaHRBbmtsZVJpZ0F0dGFjaG1lbnQEtABTAVIBCsXhHDwsggo91DUtOSEKUmlnaHRBbmtsZQTbAFMBUgEhCVJpZ2h0SGFuZAS5AFEB'
..'UgEKMiSWwbyiFEBY5H3BCkHVhz9ySLY+//eHPyEoaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0P2lkPTQ2Nzk4MjY2MgoQ0n8/paarPr8JgD8hF1JpZ2h0V3Jpc3RSaWdBdHRhY2htZW50BL8AUwFSAQr703A6g798PX1PhrwhE1JpZ2h0R3JpcEF0dGFjaG1lbnQE'
..'wgBTAVQBCjEKPTwBaTe+Sk+GvCEKUmlnaHRXcmlzdARcAVMBUgEEXQFTAVIBIQ1SaWdodExvd2VyQXJtBMgAUQFSAQpAMJbBlvBGQMfefcEhKGh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldD9pZD00Njc5ODI2NjQhF1JpZ2h0RWxib3dSaWdBdHRhY2htZW50BMwA'
..'UwFSAQqYQBU7HrMFPootLLwEzgBTAVIBCphAFTtvazm/ii0svCEKUmlnaHRFbGJvdwTlAFMBUgEEXgFTAVIBIQ1SaWdodExvd2VyTGVnBNQAUQFSAQryJJbBvO98P6TubMEKPveHPyZ8yj8U+Yc/IShodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQ/aWQ9NDY3OTgy'
..'Njg0CgoJgD+zrL4/xAqAPyEWUmlnaHRLbmVlUmlnQXR0YWNobWVudATaAFMBUgEKjSSFO3dHnT7OaCI5Co0khTuRN0G/7cudOSEJUmlnaHRLbmVlBF8BUwFSASENUmlnaHRVcHBlckFybQTgAFEBUgEKPjGWwRkuYUDI3n3BIShodHRwOi8vd3d3LnJvYmxveC5jb20v'
..'YXNzZXQ/aWQ9NDY3OTgyNjY5IRpSaWdodFNob3VsZGVyUmlnQXR0YWNobWVudATkAFMBUgEK9sWGvihp+D4+PyS8Cvo1FTuMEo++Pj8kvCEXUmlnaHRTaG91bGRlckF0dGFjaG1lbnQE6ABTAVIBCuhJUzyc9UA/Pj8kvCENUmlnaHRTaG91bGRlcgT/AFMBUgEhDVJp'
..'Z2h0VXBwZXJMZWcE7QBRAVIBCo8llsEc0sk/pO5swSEoaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0P2lkPTQ2Nzk4MjY4NgTwAFMBUgEKjSSFO7fTAz8thQc6BPIAUwFSAQqNJIU7fyGQvqS77TkhCFJpZ2h0SGlwIQpVcHBlclRvcnNvBPYAUQFSAQruI5bB3Gda'
..'QBRqZMEKuvIHQLec2T9TAIg/IShodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQ/aWQ9NDY3OTgyNjcxCskEAEBk68w/lxGAPwT7AFMBUgEK1D68OdD9+77yXoe8BP0AUwFSAQrUPrw5CiBbP/Jeh7wKgdmpv2tDFz/yXoe8CiT0qT+ITRc/8l6HvCEUTGVmdENvbGxh'
..'ckF0dGFjaG1lbnQEAgFTAVIBCuHhh79gp1o/8l6HvCEVUmlnaHRDb2xsYXJBdHRhY2htZW50BAUBUwFSAQpp+Yc/YKdaP/Jeh7whEkJvZHlCYWNrQXR0YWNobWVudAQIAVMBUgEK1D68OXKqc77cOg4/IRNCb2R5RnJvbnRBdHRhY2htZW50BAsBUwFSAQrUPrw5cqpz'
..'vlSRB78hBVdhaXN0BGABUwFSASELS2lsbCBzY3JpcHQhEEh1bWFub2lkUm9vdFBhcnQKxkWWwSlxH0CNa2TBCqXtB0Cl7QdApe2HPyEISHVtYW5vaWQhCUhpcEhlaWdodAMAAACgmZn1PyEHUmlnVHlwZSEJV2Fsa1NwZWVkAwAAAAAAAChAIQhBbmltYXRvciEPRW5l'
..'bXlDb250cm9sbGVyIQZmbG9wcGEEYQFiAWMBIQVUb3JzbwQgAWQBZQEhCE1hc3NsZXNzCgAAAAAAgC9DAAAAAAqaEKLBeO2eQCMcQcEKAAA0QwAAkEAAADTDCuxtEj/sbRI/bae6PyELTWFpbiBGbG9wcGEEJQFRAVIBCg0RgcGOelhAGKtowQpfrOJAjXrYQJd390Ah'
..'BEZhY2UDAAAAAAAAAEAhF3JieGFzc2V0aWQ6Ly82Nzg3OTcyMzUzAwAAAAAAABBAIRdyYnhhc3NldGlkOi8vNjc4Nzk3MjI0MSEXcmJ4YXNzZXRpZDovLzY3ODc5NzE5OTgDAAAAAAAACEAhF3JieGFzc2V0aWQ6Ly82Nzg3OTcxODgzIRdyYnhhc3NldGlkOi8vNjc4'
..'Nzk3MTc3NyEXcmJ4YXNzZXRpZDovLzY3ODc5NzE2MTkEZgFTAVIBIQhMZWZ0IEFybQQ1AWcBaAEKAAAAAACAL0MAALTCCiSOpcFDm5ZA6lE7wQoAADRDAACQQAAAtEIKVAw4Pw88ij5cxII+IQhMZWZ0IExlZwQ6AWcBaAEKpfukwUOblkDB3EnBIQlSaWdodCBBcm0E'
..'PQFnAWgBCnJIn8FDm5ZALFU6wSEJUmlnaHQgTGVnBEABZwFoAQplxJ7BQ5uWQEniSMEEQgFoAWkBCkoPosHHMqRAjT1BwQoAADRDAACQQAAANEMK7G0SP+xtEj8/5YU+IQZGb2xkZXIhCkFuaW1hdGlvbnMhCUFuaW1hdGlvbiEIV2Fsa0FuaW0hC0FuaW1hdGlvbklk'
..'ISlodHRwOi8vd3d3LnJvYmxveC5jb20vYXNzZXQvP2lkPTkxMzQwMjg0OCEFSWRsZTEhKWh0dHA6Ly93d3cucm9ibG94LmNvbS9hc3NldC8/aWQ9NTA3NzY2Mzg4IQtOdW1iZXJWYWx1ZSEGV2VpZ2h0IQVWYWx1ZQMAAAAAAAAiQAoAAAAAAAAAAAAAgL8KAAAAAAAA'
..'gD8AAAAACgAAgD8AAAAAAAAAAAoAAAAAMjGNJAAAgL8K9grXuQHaez19T4a8Co0khbv9zY++alYjOgo0KAm/+ieEvi/pqjoKAACAP1oXOaWzAK8mCloXOSUAAIA/AACgpArVPrw5CiBbP/Jeh7wKRWPyty3EGb+tjoY7CplAFTtvazm/ii0svAr703A6hL98PX1PhrwK'
..'mUAVOx6zBT6KLSy8Co0khTuAIZC+pLvtOQrVPrw50P37vvJeh7wKSg+iwcoypECOPUHBCvk1f78mpYwkKq+gvQrAACKiAACAPwAAIicK+TV/vyQFiyQqr6C9Cgs6fiQAAIA/HlTcJgql7Ye+uUy+Pw7pKcAKrrmlJgAAgL8OqJeoCvk1f78kqYskKq+gvQquuaWmAACA'
..'Pw6olyhqAQAAAgACAAMABQAGAAcAAQoAAgAIAAkACgALAAwADQAOAA8AEAARAA4AEgATABQAFQAWABcAGAAZABoAAgMAAgAbAAkAHAAPAB0AHgACAwACAB8AIAAhACIAHAAHAAEKAAIAJQAJACYACwAMAA0ADgAPACcAEQAOABIAKAAUABUAFgApABgAKgAaAAUDAAIA'
..'KwAJACwADwAtABoABQQAAgAuAAkALwANADAADwAxAB4ABQMAAgAyACAAMwAiADQABwABCgACADUACQA2AAsADAANAA4ADwA3ABEADgASADgAFAAVABYAOQAYADoAGgAJAwACADsACQA8AA8APQAaAAkDAAIAKwAJADMADwA+AB4ACQMAAgA/ACAAQAAiADwABwABCgAC'
..'AEEACQBCAAsADAANAA4ADwBDABEADgASAEQAFAAVABYARQAYAEYAGgANAwACAEcACQBIAA8ASQAaAA0DAAIAGwAJACEADwBKAB4ADQMAAgBLACAATAAiAEgABwABCgACAE0ACQBOAAsADAANAA4ADwBPABEADgASAFAAFAAVABYAUQAYAFIAGgARAwACAFMACQBUAA8A'
..'VQAaABEDAAIAOwAJAEAADwBWABoAEQMAAgBXAAkAWAAPAFkAHgARAwACAFoAIABbACIAVAAHAAEKAAIAXAAJAF0ACwAMAA0ADgAPAF4AEQAOABIAXwAUABUAFgBgABgAYQAaABYDAAIAYgAJAGMADwBkABoAFgMAAgBHAAkAZQAPAGYAHgAWAwACAGcAIABoACIAYwAH'
..'AAEJAAIAaQAJAGoADQAOAA8AawARAA4AEgBsABQAFQAWAG0AGABuABoAGgMAAgBvAAkAcAAPAHEAGgAaAwACAHIACQBzAA8AdAAaABoDAAIAYgAJAHUADwB2ABoAGgMAAgB3AAkAeAAPAHkAGgAaAwACAHoACQB7AA8AfAAaABoDAAIAfQAJAH4ADwB/ABoAGgMAAgCA'
..'AAkAgQAPAIIAHgAaAgACAIMAIgBwAIQAAQoAAgCFAIYAhwAJAIgAiQCKAA0ADgAPAIsAEQAOABIAjACNAIcAFAAVAI4AIwMAjwCMABYAkACRAJIAGgAjBAACAJMACQCUAA0AlQAPAJYAGgAjAwACAJcACQCYAA8AmQAaACMEAAIAmgAJAJsADQCVAA8AnAAaACMEAAIA'
..'nQAJAJ4ADQCVAA8AnwAaACMEAAIAoAAJAJ4ADQCVAA8AnwAaACMEAAIAoQAJAKIADQCVAA8AowCkACMCAAIApQCmAKcAHgAjAwACAKgAIACpACIAqgCrACMAAAcAAQoAAgCsAAkArQALAAwADQAOAA8ArgARAA4AEgCvABQAFQAWALAAGACxABoALgMAAgCyAAkAswAP'
..'ALQAHgAuAwACALUAIAC2ACIAswAHAAEKAAIAtwAJALgACwAMAA0ADgAPALkAEQAOABIAugAUABUAFgC7ABgAvAAaADEDAAIAvQAJAL4ADwC/ABoAMQQAAgDAAAkAwQANADAADwDCAB4AMQMAAgDDACAAxAAiAMUABwABCgACAMYACQDHAAsADAANAA4ADwDIABEADgAS'
..'ADgAFAAVABYAyQAYADoAGgA1AwACAMoACQDLAA8AzAAaADUDAAIAvQAJAM0ADwDOAB4ANQMAAgDPACAA0AAiANEABwABCgACANIACQDTAAsADAANAA4ADwDUABEADgASANUAFAAVABYA1gAYANcAGgA5AwACANgACQDZAA8A2gAaADkDAAIAsgAJALYADwDbAB4AOQMA'
..'AgDcACAA3QAiANkABwABCgACAN4ACQDfAAsADAANAA4ADwDgABEADgASAFAAFAAVABYA4QAYAFIAGgA9AwACAOIACQDjAA8A5AAaAD0DAAIAygAJANAADwDlABoAPQMAAgDmAAkA5wAPAOgAHgA9AwACAOkAIADqACIA4wAHAAEKAAIA6wAJAOwACwAMAA0ADgAPAO0A'
..'EQAOABIAXwAUABUAFgDuABgAYQAaAEIDAAIAdwAJAO8ADwDwABoAQgMAAgDYAAkA8QAPAPIAHgBCAwACAPMAIAB4ACIA7wAHAAEJAAIA9AAJAPUADQAOAA8A9gARAA4AEgD3ABQAFQAWAPgAGAD5ABoARgMAAgByAAkA+gAPAPsAGgBGAwACAJcACQD8AA8A/QAaAEYD'
..'AAIAUwAJAFsADwD+ABoARgMAAgDiAAkA6gAPAP8AGgBGAwACAAABCQABAQ8AAgEaAEYDAAIAAwEJAAQBDwAFARoARgMAAgAGAQkABwEPAAgBGgBGAwACAAkBCQAKAQ8ACwEeAEYDAAIADAEgAHMAIgANAasARgEAAgAOAYQAAQkAAgAPAQkABgALAAwAiQCKAA0ADgAP'
..'ABABEQAOABIAEQEUABUAGgBRAQACAG8AEgEBAwATARQBFQEVABYBFwEYAVMAAKsAUwEAAgAZAQEAAQIAAgAaAQUAGwGEAFYKAAIAHAGGAIcACQAdAR4BigANAB8BDwAgAREAIQESACIBjQCHABQAFQCEAFYKAAIAIwGGAIcACQAkAQsADAAeAYoADQAOAA8AJQERAA4A'
..'EgAmAY0AhwCkAFgCACcBKAGmACkBpABYAgAnASoBpgArAaQAWAEApgAsAaQAWAIAJwEtAaYALgGkAFgCACcBhwCmAC8BpABYAgAnARUApgAwAasAWAAAHgBYAgACAIUAIAAxAYQAVgsAAgAyAYYAhwAJADMBCwAMAB4BigANADQBDwA1AREANgESADcBjQCHABQAFQCE'
..'AFYLAAIAOAGGAIcACQA5AQsADAAeAYoADQA0AQ8AOgERADYBEgA3AY0AhwAUABUAhABWCwACADsBhgCHAAkAPAELAAwAHgGKAA0ANAEPAD0BEQA2ARIANwGNAIcAFAAVAIQAVgsAAgA+AYYAhwAJAD8BCwAMAB4BigANADQBDwBAAREANgESADcBjQCHABQAFQCEAFYK'
..'AAIADwGGAIcACQBBAR4BigANAB8BDwBCAREAQwESAEQBjQCHABQAFQASAVYAAEUBAQEAAgBGAUcBZwIAAgBIAUkBSgFHAWcCAAIASwFJAUwBTQFpAgACAE4BTwFQASEBBABRBCMADQQkAAIIIwAJCCQABQwjABEMJAAJECMAFhAkAA0VIwBGFSQAERkjABoZJAAWIiMA'
..'USIkABosIwBGLCQAIzAjADkwJAAuNCMANTQkADE4IwA9OCQANTwjAEI8JAA5QSMARkEkAD1FIwAaRSQAQk8jABpPJABGYCMAWGAkACM=')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
