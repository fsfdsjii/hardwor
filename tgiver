-- Converted using Mokiros's Model to Script Version 3
-- Converted string size: 2008 characters

local ScriptFunctions = {
function(script,require)
ball = script.Parent

damage = 9999999999999999







function onTouched(hit)

	local humanoid = hit.Parent:findFirstChild("Humanoid")


	for i=1,1 do

		local s = Instance.new("Part")

		s.Shape = 1 -- block

		s.formFactor = 2 -- plate

		s.Size = Vector3.new(1,.4,1)

		s.BrickColor = ball.BrickColor

		local v = Vector3.new(math.random(-1,1), math.random(0,1), math.random(-1,1))

		s.Velocity = 60 * v

		s.CFrame = CFrame.new(ball.Position + v, v)

		ball.BrickCleanup:clone().Parent = s

		s.BrickCleanup.Disabled = false

		s.Parent = game.Workspace

		

	end

	



	if humanoid ~= nil then

		tagHumanoid(humanoid)

		humanoid.Health = humanoid.Health - damage

		wait(0)

		untagHumanoid(humanoid)

	end



	connection:disconnect()

	ball.Parent = nil

end



function tagHumanoid(humanoid)

	-- todo: make tag expire

	local tag = ball:findFirstChild("creator")

	if tag ~= nil then

		local new_tag = tag:clone()

		new_tag.Parent = humanoid

	end

end





function untagHumanoid(humanoid)

	if humanoid ~= nil then

		local tag = humanoid:findFirstChild("creator")

		if tag ~= nil then

			tag.Parent = nil

		end

	end

end



connection = ball.Touched:connect(onTouched)



wait(6)

ball.Parent = nil
end,
function(script,require)
wait(0.1)
Boom = script.Parent
for i = 1, 200 do
Boom.Size = Boom.Size + Vector3.new(1, 0, 1)
wait(0.01)
end
Boom:Remove()
end,
function(script,require)
wait(0.1)
Boom = script.Parent
for i = 1, 200 do
Boom.Size = Boom.Size + Vector3.new(1, 1, 1)
wait(0.01)
end
Boom:Remove()
end,
function(script,require)
wait(0.1)
function destroy(hit)
Boom = Instance.new("Explosion")
Boom.Parent = game.Workspace
Boom.Position = hit.Position
wait(1)
Boom:Remove()
end

script.Parent.Touched:connect(destroy)

end,
function(script,require)
wait(0.1)
pos = script.Parent.CFrame
while true do
script.Parent.CFrame = pos
wait(0.000000000000000000000000000000000000000000000000001)
end

end,
function(script,require)
Tool = script.Parent



colors = {24,90,23,1,102,104,141}



function fire(v)


	Tool.Handle.Fire:play()

	



	local vCharacter = Tool.Parent

	local vPlayer = game.Players:playerFromCharacter(vCharacter)



	local missile = Instance.new("Part")

        
	local spawnPos = vCharacter.PrimaryPart.Position
	


	spawnPos  = spawnPos + (v * 8)

	missile.Position = spawnPos
	missile.Size = Vector3.new(1,1,1)
	missile.Velocity = v * 500
	missile.BrickColor = BrickColor.new(colors[math.random(1, #colors)])
	missile.Shape = 1
	missile.BottomSurface = 0
	missile.TopSurface = 0
	missile.Name = "Paintball"
	missile.Elasticity = 0
	missile.Reflectance = 0.2
	missile.Friction = .3

	local force = Instance.new("BodyForce")
	force.force = Vector3.new(0,220,0)
	force.Parent = missile
	
	Tool.Explosion:clone().Parent = missile
	Tool.Grow:clone().Parent = missile
	Tool.Grow2:clone().Parent = missile
	Tool.Stay:clone().Parent = missile
	Tool.Touch:clone().Parent = missile

	local new_script = script.Parent.Paintball:clone()
	new_script.Disabled = false
	new_script.Parent = missile

	local creator_tag = Instance.new("ObjectValue")
	creator_tag.Value = vPlayer
	creator_tag.Name = "creator"
	creator_tag.Parent = missile
	missile.Parent = game.Workspace
	
	script.Parent.Parent.Torso:FindFirstChild("Right Shoulder").DesiredAngle = 1.7

        end






Tool.Enabled = true

function onActivated()



	if not Tool.Enabled then

		return

	end



	Tool.Enabled = false

	local character = Tool.Parent;

	local humanoid = character.Humanoid

	if humanoid == nil then

		print("Humanoid not found")

		return 

	end



	local targetPos = humanoid.TargetPoint

	local lookAt = (targetPos - character.Head.Position).unit



	fire(lookAt)



	wait(.1)



	Tool.Enabled = true
end
script.Parent.Activated:connect(onActivated)

end,
function(script,require)
local Tool = script.Parent;



enabled = true

function onButton1Down(mouse)

	if not enabled then

		return

	end



	enabled = true

	mouse.Icon = "rbxasset://textures\\GunWaitCursor.png"



	wait(0.5)

	mouse.Icon = "rbxasset://textures\\GunCursor.png"

	enabled = true



end



function onEquippedLocal(mouse)



	if mouse == nil then

		print("Mouse not found")

		return 

	end



	mouse.Icon = "rbxasset://textures\\GunCursor.png"

	mouse.Button1Down:connect(function() onButton1Down(mouse) end)

end





Tool.Equipped:connect(onEquippedLocal)


end,
function(script,require)
shockRing = Instance.new("Part")
shockRing.formFactor = 2
shockRing.Size = Vector3.new(50, 0.4, 50)
shockRing.Anchored = true
shockRing.Locked = true
shockRing.CanCollide = false
shockRing.archivable = false
shockRing.TopSurface = 0
shockRing.BottomSurface = 0
shockRing.Transparency = 1
local decal = Instance.new("Decal")
decal.Face = 1
decal.Texture = "http://www.roblox.com/asset/?version=1&id=1280730"
decal.Parent = shockRing

local bottomDecal = decal:Clone()
bottomDecal.Face = 4
bottomDecal.Parent = shockRing


debounce = true
function activate(hit)
if debounce == false then return end
debounce = false
script.Parent.Anchored = true
wait(0.05)
Boom2 = Instance.new("Explosion")
Boom2.BlastRadius = 40
Boom2.Parent = game.Workspace
Boom2.Position = script.Parent.Position
wait(0.5)
Boom2:Remove()
Boom = Instance.new("Part")
Boom.Parent = game.Workspace
Boom.formFactor = 0
Boom.Shape = 0
Boom.BrickColor = BrickColor:Yellow()
Boom.Position = script.Parent.Position
Boom.Transparency = 0.3
Boom.Size = Vector3.new(1, 1, 1)
Boom.Anchored = true
Boom.TopSurface = "Smooth"
Boom.BottomSurface = "Smooth"
script.Parent.Transparency = 1
Script = script.Parent.Explosion
SC = Script:clone()
SC.Disabled = false
SC.Parent = Boom
Grow = script.Parent.Grow
GC = Grow:clone()
GC.Disabled = false
GC.Parent = Boom
Stay = script.Parent.Stay
SC = Stay:clone()
SC.Disabled = false
SC.Parent = Boom
Boom2 = Instance.new("Explosion")
Boom2.BlastRadius = 40
Boom2.Position = script.Parent.Position
pos = script.Parent.Position
shockRing.Position = pos
shockRing.Parent = game.Workspace
Grow2 = script.Parent.Grow2
G2C = Grow2:clone()
G2C.Disabled = false
G2C.Parent = shockRing
Script2 = script.Parent.Explosion
S2C = Script2:clone()
S2C.Disabled = false
S2C.Parent = shockRing
Stay2 = script.Parent.Stay
S2C = Stay:clone()
S2C.Disabled = false
S2C.Parent = shockRing
wait(0.5)
Boom2:Remove()
wait(5)
script.Parent.Parent:Remove()
wait(100)
end

script.Parent.Touched:connect(activate)

end,
function(script,require)
local debounce = false

function getPlayer(humanoid) 
local players = game.Players:children() 
for i = 1, #players do 
if players[i].Character.Humanoid == humanoid then return players[i] end 
end 
return nil 
end 

function onTouch(part) 

local human = part.Parent:findFirstChild("Humanoid") 
if (human ~= nil) and debounce == false then

debounce = true

local player = getPlayer(human) 

if (player == nil) then return end 

script.Parent:clone().Parent = player.Backpack

wait(2)
debounce = false
end
end


script.Parent.Parent.Touched:connect(onTouch) 

end,
function(script,require)
--DONT PUT THIS IN ANYTHING IT'S JUST INSTRUCTIONS.
--First Place the "PUT THIS IN THE WEAPON" script in your Weapon or Tool.
--Then place your Weapon or Tool in the "PUT THE WEAPON IN THIS BRICK" brick.

--IMPORTANT (OPTINAL)
--Before doing anything you should put the Weapon or Tool in the giver where you want it.
end
}
local ScriptIndex = 0
local Scripts,ModuleScripts,ModuleCache = {},{},{}
local _require = require
function require(obj,...)
	local index = ModuleScripts[obj]
	if not index then
		local a,b = pcall(_require,obj,...)
		return not a and error(b,2) or b
	end
	
	local res = ModuleCache[index]
	if res then return res end
	res = ScriptFunctions[index](obj,require)
	if res==nil then error("Module code did not return exactly one value",2) end
	ModuleCache[index] = res
	return res
end
local function Script(obj,ismodule)
	ScriptIndex = ScriptIndex + 1
	local t = ismodule and ModuleScripts or Scripts
	t[obj] = ScriptIndex
end

function RunScripts()
	for script,index in pairs(Scripts) do
		coroutine.wrap(ScriptFunctions[index])(script,require)
	end
end


local function Decode(str)
	local StringLength = #str
	
	-- Base64 decoding
	do
		local decoder = {}
		for b64code, char in pairs(('ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/='):split('')) do
			decoder[char:byte()] = b64code-1
		end
		local n = StringLength
		local t,k = table.create(math.floor(n/4)+1),1
		local padding = str:sub(-2) == '==' and 2 or str:sub(-1) == '=' and 1 or 0
		for i = 1, padding > 0 and n-4 or n, 4 do
			local a, b, c, d = str:byte(i,i+3)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40 + decoder[d]
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8),bit32.extract(v,0,8))
			k = k + 1
		end
		if padding == 1 then
			local a, b, c = str:byte(n-3,n-1)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000 + decoder[c]*0x40
			t[k] = string.char(bit32.extract(v,16,8),bit32.extract(v,8,8))
		elseif padding == 2 then
			local a, b = str:byte(n-3,n-2)
			local v = decoder[a]*0x40000 + decoder[b]*0x1000
			t[k] = string.char(bit32.extract(v,16,8))
		end
		str = table.concat(t)
	end
	
	local Position = 1
	local function Parse(fmt)
		local Values = {string.unpack(fmt,str,Position)}
		Position = table.remove(Values)
		return table.unpack(Values)
	end
	
	local Settings = Parse('B')
	local Flags = Parse('B')
	Flags = {
		--[[ValueIndexByteLength]] bit32.extract(Flags,6,2)+1,
		--[[InstanceIndexByteLength]] bit32.extract(Flags,4,2)+1,
		--[[ConnectionsIndexByteLength]] bit32.extract(Flags,2,2)+1,
		--[[MaxPropertiesLengthByteLength]] bit32.extract(Flags,0,2)+1,
		--[[Use Double instead of Float]] bit32.band(Settings,0b1) > 0
	}
	
	local ValueFMT = ('I'..Flags[1])
	local InstanceFMT = ('I'..Flags[2])
	local ConnectionFMT = ('I'..Flags[3])
	local PropertyLengthFMT = ('I'..Flags[4])
	
	local ValuesLength = Parse(ValueFMT)
	local Values = table.create(ValuesLength)
	local CFrameIndexes = {}
	
	local ValueDecoders = {
		--!!Start
		[1] = function(Modifier)
			return Parse('s'..Modifier)
		end,
		--!!Split
		[2] = function(Modifier)
			return Modifier ~= 0
		end,
		--!!Split
		[3] = function()
			return Parse('d')
		end,
		--!!Split
		[4] = function(_,Index)
			table.insert(CFrameIndexes,{Index,Parse(('I'..Flags[1]):rep(3))})
		end,
		--!!Split
		[5] = {CFrame.new,Flags[5] and 'dddddddddddd' or 'ffffffffffff'},
		--!!Split
		[6] = {Color3.fromRGB,'BBB'},
		--!!Split
		[7] = {BrickColor.new,'I2'},
		--!!Split
		[8] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = ColorSequenceKeypoint.new(Parse('f'),Color3.fromRGB(Parse('BBB')))
			end
			return ColorSequence.new(kpts)
		end,
		--!!Split
		[9] = function(Modifier)
			local len = Parse('I'..Modifier)
			local kpts = table.create(len)
			for i = 1,len do
				kpts[i] = NumberSequenceKeypoint.new(Parse(Flags[5] and 'ddd' or 'fff'))
			end
			return NumberSequence.new(kpts)
		end,
		--!!Split
		[10] = {Vector3.new,Flags[5] and 'ddd' or 'fff'},
		--!!Split
		[11] = {Vector2.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[12] = {UDim2.new,Flags[5] and 'di2di2' or 'fi2fi2'},
		--!!Split
		[13] = {Rect.new,Flags[5] and 'dddd' or 'ffff'},
		--!!Split
		[14] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Axes.new(unpack(t))
		end,
		--!!Split
		[15] = function()
			local flags = Parse('B')
			local ids = {"Top","Bottom","Left","Right","Front","Back"}
			local t = {}
			for i = 0,5 do
				if bit32.extract(flags,i,1)==1 then
					table.insert(t,Enum.NormalId[ids[i+1]])
				end
			end
			return Faces.new(unpack(t))
		end,
		--!!Split
		[16] = {PhysicalProperties.new,Flags[5] and 'ddddd' or 'fffff'},
		--!!Split
		[17] = {NumberRange.new,Flags[5] and 'dd' or 'ff'},
		--!!Split
		[18] = {UDim.new,Flags[5] and 'di2' or 'fi2'},
		--!!Split
		[19] = function()
			return Ray.new(Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')),Vector3.new(Parse(Flags[5] and 'ddd' or 'fff')))
		end
		--!!End
	}
	
	for i = 1,ValuesLength do
		local TypeAndModifier = Parse('B')
		local Type = bit32.band(TypeAndModifier,0b11111)
		local Modifier = (TypeAndModifier - Type) / 0b100000
		local Decoder = ValueDecoders[Type]
		if type(Decoder)=='function' then
			Values[i] = Decoder(Modifier,i)
		else
			Values[i] = Decoder[1](Parse(Decoder[2]))
		end
	end
	
	for i,t in pairs(CFrameIndexes) do
		Values[t[1]] = CFrame.fromMatrix(Values[t[2]],Values[t[3]],Values[t[4]])
	end
	
	local InstancesLength = Parse(InstanceFMT)
	local Instances = {}
	local NoParent = {}
	
	for i = 1,InstancesLength do
		local ClassName = Values[Parse(ValueFMT)]
		local obj
		local MeshPartMesh,MeshPartScale
		if ClassName == "UnionOperation" then
			obj = DecodeUnion(Values,Flags,Parse)
			obj.UsePartColor = true
		elseif ClassName:find("Script") then
			obj = Instance.new("Folder")
			Script(obj,ClassName=='ModuleScript')
		elseif ClassName == "MeshPart" then
			obj = Instance.new("Part")
			MeshPartMesh = Instance.new("SpecialMesh")
			MeshPartMesh.MeshType = Enum.MeshType.FileMesh
			MeshPartMesh.Parent = obj
		else
			obj = Instance.new(ClassName)
		end
		local Parent = Instances[Parse(InstanceFMT)]
		local PropertiesLength = Parse(PropertyLengthFMT)
		local AttributesLength = Parse(PropertyLengthFMT)
		Instances[i] = obj
		for i = 1,PropertiesLength do
			local Prop,Value = Values[Parse(ValueFMT)],Values[Parse(ValueFMT)]
			
			-- ok this looks awful
			if MeshPartMesh then
				if Prop == "MeshId" then
					MeshPartMesh.MeshId = Value
					continue
				elseif Prop == "TextureID" then
					MeshPartMesh.TextureId = Value
					continue
				elseif Prop == "Size" then
					if not MeshPartScale then
						MeshPartScale = Value
					else
						MeshPartMesh.Scale = Value / MeshPartScale
					end
				elseif Prop == "MeshSize" then
					if not MeshPartScale then
						MeshPartScale = Value
						MeshPartMesh.Scale = obj.Size / Value
					else
						MeshPartMesh.Scale = MeshPartScale / Value
					end
					continue
				end
			end
			
			obj[Prop] = Value
		end
		if MeshPartMesh then
			if MeshPartMesh.MeshId=='' then
				if MeshPartMesh.TextureId=='' then
					MeshPartMesh.TextureId = 'rbxasset://textures/meshPartFallback.png'
				end
				MeshPartMesh.Scale = obj.Size
			end
		end
		for i = 1,AttributesLength do
			obj:SetAttribute(Values[Parse(ValueFMT)],Values[Parse(ValueFMT)])
		end
		if not Parent then
			table.insert(NoParent,obj)
		else
			obj.Parent = Parent
		end
	end
	
	local ConnectionsLength = Parse(ConnectionFMT)
	for i = 1,ConnectionsLength do
		local a,b,c = Parse(InstanceFMT),Parse(ValueFMT),Parse(InstanceFMT)
		Instances[a][Values[b]] = Instances[c]
	end
	
	return NoParent
end


local Objects = Decode('AABtIQVNb2RlbCELUHJpbWFyeVBhcnQhCldvcmxkUGl2b3QETltcIQRQYXJ0IQROYW1lIRJTbW9vdGggQmxvY2sgTW9kZWwhCEFuY2hvcmVkIiEKQnJpY2tDb2xvcgcaACEGQ0ZyYW1lBBNbXCEFQ29sb3IGGyo1IQtPcmllbnRhdGlvbgoAAAAAAAC0QgAAAAAhCFBv'
..'c2l0aW9uCk4AFkJIh0BA1APcwSEIUm90YXRpb24hBFNpemUKAABAQAAAwEAAAIA/IQxUcmFuc3BhcmVuY3kDAAAAQDMz0z8EG11eCgAAAAAAADRDAAAAAApMABpCsoZAQNwD7MEKAAA0wwAAAAAAADRDIRxQVVQgVEhFIFdFQVBPTiBJTiBUSElTIEJSSUNLBwEABCJf'
..'YAby8/MKCtcjvAAAAAAAAAAACg4AEkLWpy1A1P/bwQoAAIA/mpmZPwAAoEAhClRvcFN1cmZhY2UDAAAAAAAAAAAhBFRvb2whB051a2VHdW4EL2FiIQZIYW5kbGUhF0Fzc2VtYmx5QW5ndWxhclZlbG9jaXR5CvucFiSpj7ChHYwUIyEWQXNzZW1ibHlMaW5lYXJWZWxv'
..'Y2l0eQrC99ijofBhvPrAgSQKAAC0wgAANMMAAAAACk4AHkL8/78/pNDcwQoAALTCAAAAAAAANMMKAACAP83MTD8AAEBAIQVTb3VuZCEERmlyZSEHU291bmRJZCEnaHR0cDovL3d3dy5yb2Jsb3guY29tL2Fzc2V0Lz9pZD0yOTc0MjQ5IQZWb2x1bWUDAAAAAAAA8D8h'
..'C1NwZWNpYWxNZXNoIQVTY2FsZQoAAAA/AAAAPwAAAD8hCE1lc2hUeXBlAwAAAAAAABRAIQZTY3JpcHQhCVBhaW50YmFsbCEIRGlzYWJsZWQhBUdyb3cyIQRHcm93IQlFeHBsb3Npb24hBFN0YXkhEFBhaW50YmFsbFNob290ZXIhC0xvY2FsU2NyaXB0IQlMb2NhbCBH'
..'dWkhBVRvdWNoIRZQVVQgVEhJUyBJTiBUSEUgV0VBUE9OBEpbXApOACJCSIdAQNQD3MEKAACgQAAAwEAAAIA/BE1dXgpCABpCLoVAQNwDzMEKRAAcQuV200CkA9zBCgAAoECamZk/AACAQCEEU25hcCECQzAEY2RlIQJDMQRmZ2ghBVBhcnQwIQVQYXJ0MQRpamsEbGdo'
..'BG1qayEYUkVBRCBNRSBGT1IgSU5TVFJVQ1RJT05TCgAAAAAAAAAAAACAvwoAAAAAAACAPwAAAAAK+/9/v3wXVLen1i+3CqEYVLcAAIA/K+PBNwrr/38/VAY1OKTPLzcK7gQ1uAAAgD9HxAe5Cvz/f78uvTuzAAAApwoAAAAnAACAM/7/fz8KAAAAAJqZGb8AAAAACgAA'
..'gD8AAACAAAAAAAoAAAAAAAAAgAAAgD8KAADAuCAAQEDA/r8/CgAAgD8AAAAAAAAAAAoAAACAAAAAAAAAgD8KAAIAv10BQECAAADACqfWLzcr48G3+/9/Pwr7/3+/oRhUt2XVLzcKAADAuCAAQEBAAcC/CoABAL9dAUBAAP//PxgBAAEAAwQFAQoABgcICQoLDA0ODxAR'
..'EhMUERUWFxgFAQoABgcICQoLDBkODxAaEhsUHBUWFxgFAQoABh0ICQoeDB8OIBAhEiIUIRUjJCUFAAsABikqKywtCgsMKA4PEC4SLxQwFTEkJTIFAwAGMzQ1Njc4BQIAOTo7PD0AAgAGPj8JPQACAAZAPwk9AAIABkE/CT0AAgAGQj8JPQACAAZDPwk9AAEABkRFAAEA'
..'BkY9AAEABkc9AAEABkgFAQoABgcICQoLDEkODxAREkoUERVLFxgFAQoABgcICQoLDEwODxAaEk0UHBUWFxgFAQsABgcICQoLDAQODxAREk4UERVPJCUXGFATAgBRUlNUUBMCAFFSU1dQEwIAUVJTWFATAgBRUlNZPQEBAAZaCQECExRVExRWAhVVExVWAxZVExZWERdV'
..'ExdWEg==')
for _,obj in pairs(Objects) do
	obj.Parent = script or workspace
end

RunScripts()
